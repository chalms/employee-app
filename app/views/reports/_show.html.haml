- report = report ? report : (@report ? @report : nil)
- reportName = report.name ? report.name : "Report: #{report.id}"
- table_wrapper = (report.complete) ? '.success' : ''
.grid
  .report
    .gridrow#report-table
      %table.table.table_hover{:class => table_wrapper}
        %tr
          %td
            %h3.h3#report-name{:name => "#{report.id}_"}= reportName
          %td
            %h3.h3#report-date{:name => "#{report.id}_"}="Date: #{report.date}"
        %tr
          %td
            %h4.h4= "Manager: #{report.manager.name}"
          %td
        %tr
          %td{"colspan" => 2}
            .blockquotes
              %h4.h4#report-summary{:name => "#{report.id}_"}= report.summary
        %tr
          %td{"colspan" => 2}
            %a{:onclick => "toggleEmployeeForm()"} Add Employees
            = render partial: 'reports/employee_form', :locals => {report: report}
        - report.users_reports.each do |users_report|
          = render partial: 'users_reports/show', locals: {users_report: users_report, options: options, report: report, :div => div}

:javascript
  function toggleEmployeeForm() {
    var form = $('.employee-form');
    var prompt = $('.add-employees');
    if (form.is(":visible")) {
      form.hide();
      prompt.show();
    } else {
      form.show();
      prompt.hide();
    }
  }

  // There are some options you can configure when initiating
  // the editable feature as well as a callback function that
  // will be called when textarea gets blurred.

  function dataPresent(data) {
    lock = false;
    if (data) {
      if (data === "") lock = true
    } else {
      lock = true;
    }
    return lock;
  }

  function callJ() {
    $('#report-datepicker').on('blur', function () {
      console.log("second clicked");
        var input = $('#report-datepicker')
        var data = input.val();

        if ((data === null)  ||  (data === "") || (!data)) {
          console.log("data is null");
          input.remove();
          var label = $('#report-date');
          label.show();
        } else {
          var hash = {report : {date : data}};
          callAjax('post', "/reports/" + "#{report.id}" + "/update", hash );
          input.remove();
          var label = $('#report-date');
          label.text(data);
          label.show();
        }
    });
  }

  $('#report-date').on('click', function () {
      console.log("clicked");
      var input = $('<input type="date" id="report-datepicker">');
      var label = $('#report-date')
      input.width(label.width);
      input.height(label.height);
      input.css("margin", label.css("margin"));
      input.on('keyup', function (e) {
          if( e.keyCode == 13 ) {
              $(input).blur();
          }
      });
      label.after(input);
      label.hide();
      callJ();
  });

  $('#report-name').editable({
      touch : true, // Whether or not to support touch (default true)
      lineBreaks : true, // Whether or not to convert \n to <br /> (default true)
      toggleFontSize : true, // Whether or not it should be possible to change font size (default true),
      closeOnEnter : true, // Whether or not pressing the enter key should close the editor (default false)
      event : 'click', // The event that triggers the editor (default dblclick)
      emptyMessage : '<em>Please add a report name</em>', // HTML that will be added to the editable element in case it gets empty (default false)
      callback : function( data ) {

          if( data.content ) {
            var el = data.$el;
            var id = el.attr('name').replace("_", "");
            var hash = {};
            hash["report"] = {}
            hash["report"]["name"] = data.content;
            var str =  "reports/" + id + "/update.json";
            callAjax('post', str, hash)
          }
          if( data.fontSize ) {
              // the font size has changed
          }
          // data.$el gives you a reference to the element that was edited
      }
  });

  $('#report-summary').editable({
      touch : true, // Whether or not to support touch (default true)
      lineBreaks : true, // Whether or not to convert \n to <br /> (default true)
      toggleFontSize : true, // Whether or not it should be possible to change font size (default true),
      closeOnEnter : true, // Whether or not pressing the enter key should close the editor (default false)
      event : 'click', // The event that triggers the editor (default dblclick)
      emptyMessage : '<em>Please add a report name</em>', // HTML that will be added to the editable element in case it gets empty (default false)
      callback : function( data ) {

          if( data.content ) {
            var el = data.$el;
            var id = el.attr('name').replace("_", "");
            var hash = {};
            hash["report"] = {}
            hash["report"]["summary"] = data.content;
            var str =  "reports/" + id + "/update.json";
            callAjax('post', str, hash)
          }
          if( data.fontSize ) {
              // the font size has changed
          }
          // data.$el gives you a reference to the element that was edited
      }
  });



